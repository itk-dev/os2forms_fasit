on: pull_request
name: PR Review
jobs:
  changelog:
    runs-on: ubuntu-latest
    name: Changelog should be updated
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Git fetch
        run: git fetch

      - name: Check that changelog has been updated.
        run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

  test-composer-files:
    name: Validate composer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.1' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: json
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Validate composer files
        run: |
          composer validate --strict composer.json
          # Check that dependencies resolve.
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

  markdown-coding-standards:
    name: Yarn - Check Coding Standards (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '20' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: |
          yarn install
          yarn coding-standards-check

  php-check-coding-standards:
    name: PHP - Check Coding Standards
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.1' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: json
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: PHPCS
        run: |
          composer coding-standards-check/phpcs

  php-code-analysis:
    name: PHP - Code analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.1' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: json, gd
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: drupal-check
        run: |
          # We need a Drupal project to run drupal-check (cf. https://github.com/mglaman/drupal-check#usage)
          # Install Drupal
          composer --no-interaction create-project drupal/recommended-project:^9 --stability=dev drupal
          # Copy our module source code into the Drupal module folder.
          mkdir -p drupal/web/modules/contrib/os2forms_fasit
          cp -r os2forms_fasit.* composer.json src drupal/web/modules/contrib/os2forms_fasit
          # Add our module as a composer repository.
          composer --no-interaction --working-dir=drupal config repositories.os2forms/os2forms_fasit path web/modules/contrib/os2forms_fasit
          # Restore Drupal composer repository.
          composer --no-interaction --working-dir=drupal config repositories.drupal composer https://packages.drupal.org/8

          composer --no-interaction --working-dir=drupal config --no-plugins allow-plugins.cweagans/composer-patches true
          composer --no-interaction --working-dir=drupal config --no-plugins allow-plugins.zaporylie/composer-drupal-optimizations true
          composer --no-interaction --working-dir=drupal config --no-plugins allow-plugins.simplesamlphp/composer-module-installer true
          # @see https://getcomposer.org/doc/03-cli.md#modifying-extra-values
          composer --no-interaction --working-dir=drupal config --no-plugins --json extra.enable-patching true

          # Require our module.
          composer --no-interaction --working-dir=drupal require 'os2forms/os2forms_fasit:*'

          # Check code
          composer --no-interaction --working-dir=drupal require --dev drupal/core-dev
          cd drupal/web/modules/contrib/os2forms_fasit
          # Remove our non-dev dependencies to prevent duplicated Drupal installation
          # PHP Fatal error:  Cannot redeclare drupal_get_filename() (previously declared in /home/runner/work/os2forms_fasit/os2forms_fasit/drupal/web/modules/contrib/os2forms_fasit/vendor/drupal/core/includes/bootstrap.inc:190) in /home/runner/work/os2forms_fasit/os2forms_fasit/drupal/web/core/includes/bootstrap.inc on line 190
          # Use sed to remove the "require" property in composer.json
          sed -i '/^\s*"require":/,/^\s*}/d' composer.json
          composer --no-interaction install
          composer code-analysis
